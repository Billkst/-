class MyLinkedList {
public:
    struct Node {
        int val;
        Node* next;
        Node(int x) : val(x), next(NULL) {}//表示的含义就是节点数值为x，指针为空（初始化一个新节点）
    };
    MyLinkedList() {
        head = new Node(0);
        length = 0;
    }
    int get(int index) {
        if (index<0 || index>(length - 1)) {
            return -1;
        }
        Node* get = head->next;
          for(int i=0;i<index;i++)  {
            get = get->next;
        }
        return get->val;
    }
    void addAtHead(int val) {
        Node* first = new Node(val);
        first->next = head->next;
        head->next = first;
        length++;
    }
    void addAtTail(int val) {
        Node* cur = head;
        while (cur->next) {
            cur = cur->next;
        }
        Node* newNode = new Node(val);
        newNode->next = cur->next;
        cur->next = newNode;
        length++;
}

void addAtIndex(int index, int val) {
    if (index <= 0) {
        addAtHead(val);
    }
    else if (index > length) {
        return;
    }
    else if (index == length) {
        addAtTail(val);
    }
    else {
        Node* newNode = new Node(val);
        Node* cur = head;
          for(int i=0;i<index;i++)  {
            cur = cur->next;
        }
        newNode->next = cur->next;
        cur->next = newNode;
        length++;
    }
}

void deleteAtIndex(int index) {
    if (index < 0 || index >= length) {
        return;
    }
    Node* cur = head;
     for(int i=0;i<index;i++)  {
        cur = cur->next;
    }
    Node* temp = cur->next;
    cur->next = cur->next->next;
    delete temp;
    length--;
}
private:
    int length;
    Node* head;
};
